package model;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;

public class WrittenExamRegister {

	private ObservableList<WrittenExam> writtenExamRegister = FXCollections.observableArrayList();

	//Getters
	public ObservableList<WrittenExam> getWrittenExamRegister() {
		return writtenExamRegister;
	}

	//Methods
	public void addWrittenExam(WrittenExam writtenExam) {
		boolean existingWrittenExam = false;

		for (WrittenExam tmp : writtenExamRegister) {

			//Checks if examID is unique or not. Not acutally needed since the ID is autogenerated, but just in case.
			if (tmp.getExamID().equals(writtenExam.getExamID())) {	
				existingWrittenExam = true;
			}
		}
		if (!existingWrittenExam) {										
			writtenExamRegister.add(writtenExam);	
		}
	}
	 
	public WrittenExam removeWrittenExam(String examID) { 

		for (WrittenExam tmpExam : writtenExamRegister) {
			if (tmpExam.getExamID().equals(examID)) {

				writtenExamRegister.remove(tmpExam);
				return tmpExam;
			}
		}
		return null;
	}

	public WrittenExam findWrittenExam(String examID) {
		for (WrittenExam tmpExam : writtenExamRegister) {
			if (tmpExam.getExamID().equals(examID)) {
				return tmpExam;
			}
		}
		return null;
	}

	public Result findResult(String resultID) {

		for(WrittenExam writtenExam: writtenExamRegister) {
			for (Result resultTmp : writtenExam.getResultRegister()) {
				if (resultTmp.getResultID().equals(resultID)) {
					return resultTmp;
				}
			}
		}
		return null;
	}
}